{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\n// import { useState, useEffect } from 'react'\n// import Header from '../components/Header'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { updateProfile } from '../actions/employeeActions'\n// import { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\n// import { fetchProfile } from './../actions/employeeActions';\n// const EditProfileScreen = (props) => {\n//     const [email, setEmail] = useState('')\n//     const [phone, setPhone] = useState('')\n//     const dispatch = useDispatch()\n//     // const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\n//     // const { error, response, loading } = empProfileUpdate\n//     const empProfile = useSelector((store) => store.empProfile)\n//     const { error, response, loading } = empProfile\n//     // // call this only once (when the page has loaded successfully)\n//     useEffect(() => {\n//         dispatch(fetchProfile())\n//     }, [])\n//     useEffect(() => { }, [error, response, loading])\n//     // useEffect(() => {\n//     //     console.log('inside useeffect')\n//     //     console.log(response)\n//     //     if (response && response.status == 'success') {\n//     //         dispatch({\n//     //             type: PROFILE_UPDATE_RESET,\n//     //         })\n//     //         alert('profile updated successfuly')\n//     //     } else if (error) {\n//     //         alert('error')\n//     //     }\n//     // }, [loading, response, error])\n//     const onUpdate = () => {\n//         dispatch(updateProfile(email, phone))\n//     }\n//     return (\n//         <div>\n//             <Header title=\"Edit Profile\" />\n//             <hr />\n//             <table className=\"table table-striped\">\n//                 <thead>\n//                     <tr>\n//                         <th>MeetingId</th>\n//                         <th>Meeting Info</th>\n//                         <th>Meeting Date Time</th>\n//                         <th>Meeting Status</th>\n//                         <th></th>\n//                         <th></th>\n//                     </tr>\n//                 </thead>\n//                 {\n//                     <tbody>\n//                         {\n//                             response &&\n//                             response.data &&\n//                             response.data.length > 0 &&\n//                             response.data.map((user) => {\n//                                 return (\n//                                     <tr>\n//                                         <td>{user.empId}</td>\n//                                         <td>{user.empName}</td>\n//                                     </tr>\n//                                 )\n//                             })\n//                         }\n//                     </tbody>\n//                 }\n//             </table>\n//             <div className=\"form\">\n//                 <div className=\"mb-3\">\n//                     <label className=\"form-label\">Name</label>\n//                     <input\n//                         disabled\n//                         placeholder=\"{presponse.data()}\"\n//                         className=\"form-control\"\n//                     ></input>\n//                 </div>\n//                 <div className=\"mb-3\">\n//                     <label className=\"form-label\">Email</label>\n//                     <input\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         placeholder=\"email\"\n//                         className=\"form-control\"></input>\n//                 </div>\n//                 <div className=\"mb-3\">\n//                     <label className=\"form-label\">Phone</label>\n//                     <input\n//                         onChange={(e) => setPhone(e.target.value)}\n//                         placeholder=\"Phone\"\n//                         className=\"form-control\"\n//                     />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                     <label className=\"form-label\">Upload Photo</label>\n//                     <input\n//                         type=\"file\"\n//                         placeholder=\"\"\n//                         className=\"form-control\"\n//                     />\n//                 </div>\n//                 <div className=\"mb-3\">\n//                     <button onClick={onUpdate} className=\"btn btn-primary\">\n//                         Update\n//                     </button>\n//                 </div>\n//             </div>\n//         </div >\n//     )\n// }\n// export default EditProfileScreen\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMeetings } from './../actions/employeeActions';\nimport Header from './../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfileScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const empProfile = useSelector(store => store.empProfile);\n  const {\n    error,\n    response,\n    loading\n  } = empProfile;\n  const userLogin = useSelector(store => store.userLogin); // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(fet());\n  }, []);\n  useEffect(() => {}, [error, response, loading]);\n\n  const onAddNewMeeting = () => {\n    props.history.push('/addmeetingscreen');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Meetings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), userLogin.response && userLogin.response.data.role == 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddNewMeeting,\n        className: \"btn btn-primary float-start\",\n        children: \"Add New Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MeetingId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Date Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data && response.data.length > 0 && response.data.map(meeting => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileScreen, \"xy24OvzFKjR709Rnrz2Z1TULJrM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/EditProfileScreen.js"],"names":["useEffect","useDispatch","useSelector","getMeetings","Header","EditProfileScreen","props","dispatch","empProfile","store","error","response","loading","userLogin","fet","onAddNewMeeting","history","push","data","role","length","map","meeting","meetingId","meetingDate","meetingInfo","meetingStatus"],"mappings":"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","sourcesContent":["// import { useState, useEffect } from 'react'\r\n// import Header from '../components/Header'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { updateProfile } from '../actions/employeeActions'\r\n// import { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\r\n// import { fetchProfile } from './../actions/employeeActions';\r\n\r\n// const EditProfileScreen = (props) => {\r\n\r\n//     const [email, setEmail] = useState('')\r\n//     const [phone, setPhone] = useState('')\r\n//     const dispatch = useDispatch()\r\n\r\n//     // const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\r\n//     // const { error, response, loading } = empProfileUpdate\r\n\r\n//     const empProfile = useSelector((store) => store.empProfile)\r\n//     const { error, response, loading } = empProfile\r\n\r\n//     // // call this only once (when the page has loaded successfully)\r\n//     useEffect(() => {\r\n//         dispatch(fetchProfile())\r\n//     }, [])\r\n\r\n//     useEffect(() => { }, [error, response, loading])\r\n\r\n//     // useEffect(() => {\r\n//     //     console.log('inside useeffect')\r\n//     //     console.log(response)\r\n//     //     if (response && response.status == 'success') {\r\n//     //         dispatch({\r\n//     //             type: PROFILE_UPDATE_RESET,\r\n//     //         })\r\n//     //         alert('profile updated successfuly')\r\n//     //     } else if (error) {\r\n//     //         alert('error')\r\n//     //     }\r\n//     // }, [loading, response, error])\r\n\r\n//     const onUpdate = () => {\r\n//         dispatch(updateProfile(email, phone))\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <Header title=\"Edit Profile\" />\r\n//             <hr />\r\n//             <table className=\"table table-striped\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>MeetingId</th>\r\n//                         <th>Meeting Info</th>\r\n//                         <th>Meeting Date Time</th>\r\n//                         <th>Meeting Status</th>\r\n//                         <th></th>\r\n//                         <th></th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 {\r\n//                     <tbody>\r\n//                         {\r\n//                             response &&\r\n//                             response.data &&\r\n//                             response.data.length > 0 &&\r\n//                             response.data.map((user) => {\r\n//                                 return (\r\n//                                     <tr>\r\n//                                         <td>{user.empId}</td>\r\n//                                         <td>{user.empName}</td>\r\n//                                     </tr>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n//                     </tbody>\r\n//                 }\r\n//             </table>\r\n\r\n\r\n//             <div className=\"form\">\r\n//                 <div className=\"mb-3\">\r\n//                     <label className=\"form-label\">Name</label>\r\n//                     <input\r\n//                         disabled\r\n//                         placeholder=\"{presponse.data()}\"\r\n//                         className=\"form-control\"\r\n//                     ></input>\r\n//                 </div>\r\n//                 <div className=\"mb-3\">\r\n//                     <label className=\"form-label\">Email</label>\r\n//                     <input\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         placeholder=\"email\"\r\n//                         className=\"form-control\"></input>\r\n//                 </div>\r\n\r\n//                 <div className=\"mb-3\">\r\n//                     <label className=\"form-label\">Phone</label>\r\n//                     <input\r\n//                         onChange={(e) => setPhone(e.target.value)}\r\n//                         placeholder=\"Phone\"\r\n//                         className=\"form-control\"\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <div className=\"mb-3\">\r\n//                     <label className=\"form-label\">Upload Photo</label>\r\n//                     <input\r\n//                         type=\"file\"\r\n//                         placeholder=\"\"\r\n//                         className=\"form-control\"\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <div className=\"mb-3\">\r\n//                     <button onClick={onUpdate} className=\"btn btn-primary\">\r\n//                         Update\r\n//                     </button>\r\n\r\n//                 </div>\r\n//             </div>\r\n\r\n//         </div >\r\n//     )\r\n// }\r\n\r\n// export default EditProfileScreen\r\n\r\n\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMeetings } from './../actions/employeeActions';\r\nimport Header from './../components/Header';\r\n\r\nconst EditProfileScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const empProfile = useSelector((store) => store.empProfile)\r\n    const { error, response, loading } = empProfile\r\n\r\n    const userLogin = useSelector((store) => store.userLogin)\r\n\r\n    // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(fet())\r\n    }, [])\r\n\r\n    useEffect(() => { }, [error, response, loading])\r\n\r\n    const onAddNewMeeting = () => {\r\n        props.history.push('/addmeetingscreen')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Meetings\" />\r\n            <hr />\r\n            {\r\n                userLogin.response && userLogin.response.data.role == 'admin' &&\r\n                <div>\r\n                    <br />\r\n                    <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">Add New Meeting</button>\r\n                </div>\r\n            }\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>MeetingId</th>\r\n                        <th>Meeting Info</th>\r\n                        <th>Meeting Date Time</th>\r\n                        <th>Meeting Status</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    <tbody>\r\n                        {\r\n                            response &&\r\n                            response.data &&\r\n                            response.data.length > 0 &&\r\n                            response.data.map((meeting) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{meeting.meetingId}</td>\r\n                                        <td>{meeting.meetingDate}</td>\r\n                                        <td>{meeting.meetingInfo}</td>\r\n                                        <td>{meeting.meetingStatus}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}