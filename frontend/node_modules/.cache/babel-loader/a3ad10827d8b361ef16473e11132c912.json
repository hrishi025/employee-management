{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_SIGNOUT, USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS } from '../constants/userConstants';\nimport axios from 'axios';\nexport const logout = () => {\n  return dispatch => {\n    sessionStorage.removeItem('token');\n    dispatch({\n      type: USER_SIGNOUT\n    });\n    document.location.href = '/signin';\n  };\n};\nexport const signup = (firstName, lastName, email, password) => {\n  return dispatch => {\n    dispatch({\n      type: USER_SIGNUP_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = {\n      firstName,\n      lastName,\n      email,\n      password\n    };\n    const url = 'http://localhost:4000/user/signup';\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: USER_SIGNUP_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: USER_SIGNUP_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const signin = (email, password) => {\n  return dispatch => {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = {\n      email,\n      password\n    };\n    const url = 'http://localhost:4000/user/login';\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:/test/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_SIGNOUT","USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","axios","logout","dispatch","sessionStorage","removeItem","type","document","location","href","signup","firstName","lastName","email","password","header","headers","body","url","post","then","response","payload","data","catch","error","signin"],"mappings":"AAAA,SACEA,eADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,mBANF,EAOEC,mBAPF,QAQO,4BARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAQC,QAAD,IAAc;AACnBC,IAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAU,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,SAAzB;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAA6BC,QAA7B,KAA0C;AAC9D,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,UAAMgB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAG;AACXN,MAAAA,SADW;AAEXC,MAAAA,QAFW;AAGXC,MAAAA,KAHW;AAIXC,MAAAA;AAJW,KAAb;AAMA,UAAMI,GAAG,GAAG,mCAAZ;AACAjB,IAAAA,KAAK,CACFkB,IADH,CACQD,GADR,EACaD,IADb,EACmBF,MADnB,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClBlB,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,mBADC;AAEPsB,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFX,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBtB,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAER,gBADC;AAEPwB,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID,KAbH;AAcD,GAhCD;AAiCD,CAlCM;AAoCP,OAAO,MAAMC,MAAM,GAAG,CAACb,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAQX,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIA,UAAMoB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAMC,IAAI,GAAG;AACXJ,MAAAA,KADW;AAEXC,MAAAA;AAFW,KAAb;AAIA,UAAMI,GAAG,GAAG,kCAAZ;AACAjB,IAAAA,KAAK,CACFkB,IADH,CACQD,GADR,EACaD,IADb,EACmBF,MADnB,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClBlB,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEV,kBADC;AAEP0B,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFX,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBtB,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEZ,eADC;AAEP4B,QAAAA,OAAO,EAAEG;AAFF,OAAD,CAAR;AAID,KAbH;AAcD,GA9BD;AA+BD,CAhCM","sourcesContent":["import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n  USER_SIGNUP_FAIL,\r\n  USER_SIGNUP_REQUEST,\r\n  USER_SIGNUP_SUCCESS,\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    sessionStorage.removeItem('token')\r\n    dispatch({ type: USER_SIGNOUT })\r\n    document.location.href = '/signin'\r\n  }\r\n}\r\n\r\nexport const signup = (firstName, lastName, email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_SIGNUP_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    }\r\n    const url = 'http://localhost:4000/user/signup'\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: USER_SIGNUP_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: USER_SIGNUP_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const signin = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const header = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const body = {\r\n      email,\r\n      password,\r\n    }\r\n    const url = 'http://localhost:4000/user/login'\r\n    axios\r\n      .post(url, body, header)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: USER_LOGIN_FAIL,\r\n          payload: error,\r\n        })\r\n      })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}