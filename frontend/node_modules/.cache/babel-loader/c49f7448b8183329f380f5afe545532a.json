{"ast":null,"code":"import { QUERY_ADD_SUCCESS, QUERY_ADD_REQUEST, QUERY_ADD_FAIL, LEAVE_ADD_SUCCESS, LEAVE_ADD_REQUEST, LEAVE_ADD_FAIL, MEETING_FETCH_REQUEST, MEETING_FETCH_SUCCESS, MEETING_FETCH_FAIL, PROFILE_UPDATE_REQUEST, PROFILE_UPDATE_SUCCESS, PROFILE_UPDATE_FAIL, PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\nimport \"../constants/employeeConstants\";\nimport axios from 'axios';\nexport const getMeetings = () => {\n  return dispatch => {\n    dispatch({\n      type: MEETING_FETCH_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: sessionStorage['token']\n      }\n    };\n    const url = 'http://localhost:4000/meeting/getAll';\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: MEETING_FETCH_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: MEETING_FETCH_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const updateProfile = (email, mobile) => {\n  return dispatch => {\n    dispatch({\n      type: PROFILE_UPDATE_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: sessionStorage['token']\n      }\n    };\n    const url = 'http://localhost:4000/user/profile';\n    const body = {\n      email,\n      mobile\n    };\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: PROFILE_UPDATE_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: PROFILE_UPDATE_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const addLeave = (leaveDate, leavePurpose, leaveStatus) => {\n  return dispatch => {\n    dispatch({\n      type: LEAVE_ADD_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': sessionStorage['token']\n      }\n    };\n    const body = {\n      leaveDate,\n      leavePurpose,\n      leaveStatus\n    };\n    const url = 'http://localhost:4000/leave/addleave';\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: LEAVE_ADD_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: LEAVE_ADD_FAIL,\n        payload: error\n      });\n    });\n  };\n};\nexport const addQuery = (queryTitle, queryDesc, queryStatus) => {\n  return dispatch => {\n    dispatch({\n      type: QUERY_ADD_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        'token': sessionStorage['token']\n      }\n    };\n    const body = {\n      queryTitle,\n      queryDesc,\n      queryStatus\n    };\n    const url = 'http://localhost:4000/query/addquery';\n    axios.post(url, body, header).then(response => {\n      dispatch({\n        type: QUERY_ADD_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: QUERY_ADD_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:/test/frontend/src/actions/employeeActions.js"],"names":["QUERY_ADD_SUCCESS","QUERY_ADD_REQUEST","QUERY_ADD_FAIL","LEAVE_ADD_SUCCESS","LEAVE_ADD_REQUEST","LEAVE_ADD_FAIL","MEETING_FETCH_REQUEST","MEETING_FETCH_SUCCESS","MEETING_FETCH_FAIL","PROFILE_UPDATE_REQUEST","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_RESET","axios","getMeetings","dispatch","type","header","headers","token","sessionStorage","url","get","then","response","payload","data","catch","error","updateProfile","email","mobile","body","post","addLeave","leaveDate","leavePurpose","leaveStatus","addQuery","queryTitle","queryDesc","queryStatus"],"mappings":"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","sourcesContent":["import {\r\n    QUERY_ADD_SUCCESS,\r\n    QUERY_ADD_REQUEST,\r\n    QUERY_ADD_FAIL,\r\n\r\n    LEAVE_ADD_SUCCESS,\r\n    LEAVE_ADD_REQUEST,\r\n    LEAVE_ADD_FAIL,\r\n\r\n    MEETING_FETCH_REQUEST,\r\n    MEETING_FETCH_SUCCESS,\r\n    MEETING_FETCH_FAIL,\r\n\r\n    PROFILE_UPDATE_REQUEST,\r\n    PROFILE_UPDATE_SUCCESS,\r\n    PROFILE_UPDATE_FAIL,\r\n    PROFILE_UPDATE_RESET\r\n} from './../constants/employeeConstants';\r\nimport { } from \"../constants/employeeConstants\";\r\nimport axios from 'axios'\r\n\r\nexport const getMeetings = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: MEETING_FETCH_REQUEST,\r\n        })\r\n\r\n        const header = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: sessionStorage['token'],\r\n            },\r\n        }\r\n\r\n        const url = 'http://localhost:4000/meeting/getAll'\r\n\r\n        axios\r\n            .get(url, header)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: MEETING_FETCH_SUCCESS,\r\n                    payload: response.data,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: MEETING_FETCH_FAIL,\r\n                    payload: error,\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateProfile = (email, mobile) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PROFILE_UPDATE_REQUEST,\r\n        })\r\n\r\n        const header = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: sessionStorage['token'],\r\n            },\r\n        }\r\n\r\n        const url = 'http://localhost:4000/user/profile'\r\n\r\n        const body = {\r\n            email, mobile,\r\n        }\r\n\r\n        axios\r\n            .post(url, body, header)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_SUCCESS,\r\n                    payload: response.data,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: PROFILE_UPDATE_FAIL,\r\n                    payload: error,\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const addLeave = (leaveDate, leavePurpose, leaveStatus) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: LEAVE_ADD_REQUEST,\r\n        })\r\n\r\n        const header = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': sessionStorage['token'],\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            leaveDate,\r\n            leavePurpose,\r\n            leaveStatus,\r\n        }\r\n\r\n        const url = 'http://localhost:4000/leave/addleave'\r\n\r\n        axios\r\n            .post(url, body, header)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: LEAVE_ADD_SUCCESS,\r\n                    payload: response.data,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: LEAVE_ADD_FAIL,\r\n                    payload: error,\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const addQuery = (queryTitle, queryDesc, queryStatus) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: QUERY_ADD_REQUEST,\r\n        })\r\n\r\n        const header = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': sessionStorage['token'],\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            queryTitle,\r\n            queryDesc,\r\n            queryStatus,\r\n        }\r\n\r\n        const url = 'http://localhost:4000/query/addquery'\r\n\r\n        axios\r\n            .post(url, body, header)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: QUERY_ADD_SUCCESS,\r\n                    payload: response.data,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: QUERY_ADD_FAIL,\r\n                    payload: error,\r\n                })\r\n            })\r\n    }\r\n}   "]},"metadata":{},"sourceType":"module"}