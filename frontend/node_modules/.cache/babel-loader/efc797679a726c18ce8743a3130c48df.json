{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\AddQueryScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addQuery } from '../actions/employeeActions';\nimport { QUERY_ADD_RESET } from '../constants/employeeConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddQueryScreen = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const employeeQuerys = useSelector(store => store.employeeQuerys);\n  const {\n    response,\n    loading,\n    error\n  } = employeeQuerys;\n  useEffect(() => {\n    if (response && response.status == 'success') {\n      dispatch({\n        type: QUERY_ADD_RESET\n      });\n      alert(\"Query Request added Successfully\");\n      props;\n    } else if (error) {\n      alert(error);\n    }\n  }, [response, loading, error]);\n  const dispatch = useDispatch();\n\n  const onAddQuery = () => {\n    dispatch(addQuery(title, description, 'not solved'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTitle(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setDescription(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddQuery,\n          className: \"btn btn-primary\",\n          children: \"Add Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddQueryScreen, \"pPm4cjaV3vit70QkGM33dmAFtzU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AddQueryScreen;\nexport default AddQueryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQueryScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/AddQueryScreen.js"],"names":["useState","useEffect","Header","useDispatch","useSelector","addQuery","QUERY_ADD_RESET","AddQueryScreen","props","title","setTitle","description","setDescription","employeeQuerys","store","response","loading","error","status","dispatch","type","alert","onAddQuery","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMa,cAAc,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA+BJ,cAArC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,QAAQ,IAAIA,QAAQ,CAACG,MAAT,IAAmB,SAAnC,EAA8C;AAC1CC,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEd;AADD,OAAD,CAAR;AAGAe,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACAb,MAAAA,KAAK;AACR,KAND,MAMO,IAAIS,KAAJ,EAAW;AACdI,MAAAA,KAAK,CAACJ,KAAD,CAAL;AACH;AACJ,GAVQ,EAUN,CAACF,QAAD,EAAWC,OAAX,EAAoBC,KAApB,CAVM,CAAT;AAYA,QAAME,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMmB,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAACd,QAAQ,CAACI,KAAD,EAAQE,WAAR,EAAqB,YAArB,CAAT,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGY,CAAD,IAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;AAAkD,UAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAGF,CAAD,IAAOX,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtC;AAAwD,UAAA,SAAS,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEH,UAAjB;AAA6B,UAAA,SAAS,EAAC,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAjDD;;GAAMf,c;UAKqBH,W,EAeND,W;;;KApBfI,c;AAmDN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from '../components/Header'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addQuery } from '../actions/employeeActions'\r\nimport { QUERY_ADD_RESET } from '../constants/employeeConstants'\r\n\r\nconst AddQueryScreen = (props) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const employeeQuerys = useSelector((store) => store.employeeQuerys)\r\n    const { response, loading, error } = employeeQuerys\r\n\r\n    useEffect(() => {\r\n        if (response && response.status == 'success') {\r\n            dispatch({\r\n                type: QUERY_ADD_RESET,\r\n            })\r\n            alert(\"Query Request added Successfully\")\r\n            props\r\n        } else if (error) {\r\n            alert(error)\r\n        }\r\n    }, [response, loading, error])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onAddQuery = () => {\r\n        dispatch(addQuery(title, description, 'not solved'))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Add Query\" />\r\n            <hr />\r\n            <div className=\"form\">\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Title</label>\r\n                    <input onChange={(e) => setTitle(e.target.value)} className=\"form-control\"></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Description</label>\r\n                    <input onChange={(e) => setDescription(e.target.value)} className=\"form-control\" ></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <button onClick={onAddQuery} className=\"btn btn-primary\">Add Query</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddQueryScreen\r\n"]},"metadata":{},"sourceType":"module"}