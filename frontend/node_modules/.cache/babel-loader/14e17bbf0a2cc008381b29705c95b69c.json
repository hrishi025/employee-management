{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { userSignupReducer, userLoginReducer, addMeetingReducer, getLeavesReducer, approveLeaveReducer, rejectLeaveReducer, getQueriesReducer, changeQueryReducer, getSalarySlipReducer, getPresentDaysReducer } from './reducers/adminReducers';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { employeeAddLeave, employeeAddQuery, employeefetchMeetings, employeeUpdateProfileReducer, employeeProfileReducer } from './reducers/employeeReducers'; // combined reducers\n\nconst reducers = combineReducers({\n  userSignup: userSignupReducer,\n  userLogin: userLoginReducer,\n  adminAddMeeting: addMeetingReducer,\n  empLeaves: getLeavesReducer,\n  empapproveLeave: approveLeaveReducer,\n  emprejectLeave: rejectLeaveReducer,\n  empqueries: getQueriesReducer,\n  empQueryStatus: changeQueryReducer,\n  empSalarySlip: getSalarySlipReducer,\n  empProfileUpdate: employeeUpdateProfileReducer,\n  employeeLeaves: employeeAddLeave,\n  employeeQuerys: employeeAddQuery,\n  empPresent: getPresentDaysReducer,\n  employeeMeetings: employeefetchMeetings,\n  empProfile: employeeProfileReducer\n});\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(logger, thunk)));\nexport default store;","map":{"version":3,"sources":["F:/practice/github/employee-management/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","userSignupReducer","userLoginReducer","addMeetingReducer","getLeavesReducer","approveLeaveReducer","rejectLeaveReducer","getQueriesReducer","changeQueryReducer","getSalarySlipReducer","getPresentDaysReducer","logger","thunk","composeWithDevTools","employeeAddLeave","employeeAddQuery","employeefetchMeetings","employeeUpdateProfileReducer","employeeProfileReducer","reducers","userSignup","userLogin","adminAddMeeting","empLeaves","empapproveLeave","emprejectLeave","empqueries","empQueryStatus","empSalarySlip","empProfileUpdate","employeeLeaves","employeeQuerys","empPresent","employeeMeetings","empProfile","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,kBANF,EAOEC,iBAPF,EAQEC,kBARF,EASEC,oBATF,EAUEC,qBAVF,QAYO,0BAZP;AAaA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,qBAA7C,EAAoEC,4BAApE,EAAkGC,sBAAlG,QAAgI,6BAAhI,C,CAEA;;AACA,MAAMC,QAAQ,GAAGpB,eAAe,CAAC;AAC/BqB,EAAAA,UAAU,EAAEnB,iBADmB;AAE/BoB,EAAAA,SAAS,EAAEnB,gBAFoB;AAG/BoB,EAAAA,eAAe,EAAEnB,iBAHc;AAI/BoB,EAAAA,SAAS,EAAEnB,gBAJoB;AAK/BoB,EAAAA,eAAe,EAAEnB,mBALc;AAM/BoB,EAAAA,cAAc,EAAEnB,kBANe;AAO/BoB,EAAAA,UAAU,EAAEnB,iBAPmB;AAQ/BoB,EAAAA,cAAc,EAAEnB,kBARe;AAS/BoB,EAAAA,aAAa,EAAEnB,oBATgB;AAU/BoB,EAAAA,gBAAgB,EAAEZ,4BAVa;AAW/Ba,EAAAA,cAAc,EAAEhB,gBAXe;AAY/BiB,EAAAA,cAAc,EAAEhB,gBAZe;AAa/BiB,EAAAA,UAAU,EAAEtB,qBAbmB;AAc/BuB,EAAAA,gBAAgB,EAAEjB,qBAda;AAe/BkB,EAAAA,UAAU,EAAEhB;AAfmB,CAAD,CAAhC;AAkBA,MAAMiB,KAAK,GAAGrC,WAAW,CACvBqB,QADuB,EAEvBN,mBAAmB,CAACb,eAAe,CAACW,MAAD,EAASC,KAAT,CAAhB,CAFI,CAAzB;AAKA,eAAeuB,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport {\r\n  userSignupReducer,\r\n  userLoginReducer,\r\n  addMeetingReducer,\r\n  getLeavesReducer,\r\n  approveLeaveReducer,\r\n  rejectLeaveReducer,\r\n  getQueriesReducer,\r\n  changeQueryReducer,\r\n  getSalarySlipReducer,\r\n  getPresentDaysReducer,\r\n\r\n} from './reducers/adminReducers'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { employeeAddLeave, employeeAddQuery, employeefetchMeetings, employeeUpdateProfileReducer, employeeProfileReducer } from './reducers/employeeReducers';\r\n\r\n// combined reducers\r\nconst reducers = combineReducers({\r\n  userSignup: userSignupReducer,\r\n  userLogin: userLoginReducer,\r\n  adminAddMeeting: addMeetingReducer,\r\n  empLeaves: getLeavesReducer,\r\n  empapproveLeave: approveLeaveReducer,\r\n  emprejectLeave: rejectLeaveReducer,\r\n  empqueries: getQueriesReducer,\r\n  empQueryStatus: changeQueryReducer,\r\n  empSalarySlip: getSalarySlipReducer,\r\n  empProfileUpdate: employeeUpdateProfileReducer,\r\n  employeeLeaves: employeeAddLeave,\r\n  employeeQuerys: employeeAddQuery,\r\n  empPresent: getPresentDaysReducer,\r\n  employeeMeetings: employeefetchMeetings,\r\n  empProfile: employeeProfileReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}