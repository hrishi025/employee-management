{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\GenerateSalarySlipScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateSalarySlipScreen = props => {\n  _s();\n\n  const dispatch = useDispatch(); // const notes = useSelector((store) => store.notes)\n  // const { error, response, loading } = notes\n  // // call this only once (when the page has loaded successfully)\n  // useEffect(() => {\n  //   dispatch(getNotes())\n  // }, [])\n  // useEffect(() => { }, [error, response, loading])\n\n  const onAddNote = () => {\n    props.history.push('/add-note');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Emp Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No of Present Days \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data && response.data.length > 0 && response.data.map(meeting => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meeting.meetingStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenerateSalarySlipScreen, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = GenerateSalarySlipScreen;\nexport default GenerateSalarySlipScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateSalarySlipScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/GenerateSalarySlipScreen.js"],"names":["useEffect","useDispatch","useSelector","Header","GenerateSalarySlipScreen","props","dispatch","onAddNote","history","push","response","data","length","map","meeting","meetingId","meetingDate","meetingInfo","meetingStatus"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAD0C,CAE1C;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACtBF,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD,GAFD;;AAIA,sBACE;AAAA,2BAKE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBAEIC,QAAQ,IACRA,QAAQ,CAACC,IADT,IAEAD,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAFvB,IAGAF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAmBC,OAAD,IAAa;AAC7B,8BACE;AAAA,oCACE;AAAA,wBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD;AALJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArDD;;GAAMd,wB;UACaH,W;;;KADbG,wB;AAuDN,eAAeA,wBAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Header from '../components/Header'\r\n\r\nconst GenerateSalarySlipScreen = (props) => {\r\n  const dispatch = useDispatch()\r\n  // const notes = useSelector((store) => store.notes)\r\n  // const { error, response, loading } = notes\r\n\r\n  // // call this only once (when the page has loaded successfully)\r\n  // useEffect(() => {\r\n  //   dispatch(getNotes())\r\n  // }, [])\r\n\r\n  // useEffect(() => { }, [error, response, loading])\r\n\r\n  const onAddNote = () => {\r\n    props.history.push('/add-note')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <button onClick={onAddNote} className=\"btn btn-primary float-end\">\r\n        Add Note\r\n      </button> */}\r\n\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Emp Id</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>No of Present Days </th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            response &&\r\n            response.data &&\r\n            response.data.length > 0 &&\r\n            response.data.map((meeting) => {\r\n              return (\r\n                <tr>\r\n                  <td>{meeting.meetingId}</td>\r\n                  <td>{meeting.meetingDate}</td>\r\n                  <td>{meeting.meetingInfo}</td>\r\n                  <td>{meeting.meetingStatus}</td>\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateSalarySlipScreen\r\n"]},"metadata":{},"sourceType":"module"}