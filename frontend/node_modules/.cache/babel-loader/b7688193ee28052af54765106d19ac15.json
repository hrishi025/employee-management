{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { userSignupReducer, userLoginReducer, addMeetingReducer, getLeavesReducer, approveLeaveReducer, rejectLeaveReducer, getQueriesReducer, changeQueryReducer, getSalarySlipReducer, getPresentDaysReducer } from './reducers/adminReducers';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { employeeAddLeave, employeeAddQuery, employeefetchMeetings, employeeUpdateProfileReducer } from './reducers/employeeReducers'; // combined reducers\n\nconst reducers = combineReducers({\n  userSignup: userSignupReducer,\n  userLogin: userLoginReducer,\n  adminAddMeeting: addMeetingReducer,\n  empLeaves: getLeavesReducer,\n  empapproveLeave: approveLeaveReducer,\n  emprejectLeave: rejectLeaveReducer,\n  empqueries: getQueriesReducer,\n  empQueryStatus: changeQueryReducer,\n  empSalarySlip: getSalarySlipReducer,\n  empProfileUpdate: employeeUpdateProfileReducer,\n  employeeLeaves: employeeAddLeave,\n  employeeQuerys: employeeAddQuery,\n  empPresent: getPresentDaysReducer,\n  employeeMeetings: employeefetchMeetings\n});\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(logger, thunk)));\nexport default store;","map":{"version":3,"sources":["F:/test/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","userSignupReducer","userLoginReducer","addMeetingReducer","getLeavesReducer","approveLeaveReducer","rejectLeaveReducer","getQueriesReducer","changeQueryReducer","getSalarySlipReducer","getPresentDaysReducer","logger","thunk","composeWithDevTools","employeeAddLeave","employeeAddQuery","employeefetchMeetings","employeeUpdateProfileReducer","reducers","userSignup","userLogin","adminAddMeeting","empLeaves","empapproveLeave","emprejectLeave","empqueries","empQueryStatus","empSalarySlip","empProfileUpdate","employeeLeaves","employeeQuerys","empPresent","employeeMeetings","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,kBANF,EAOEC,iBAPF,EAQEC,kBARF,EASEC,oBATF,EASuBC,qBATvB,QAWO,0BAXP;AAYA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,qBAA7C,EAAoEC,4BAApE,QAAwG,6BAAxG,C,CAEA;;AACA,MAAMC,QAAQ,GAAGnB,eAAe,CAAC;AAC/BoB,EAAAA,UAAU,EAAElB,iBADmB;AAE/BmB,EAAAA,SAAS,EAAElB,gBAFoB;AAG/BmB,EAAAA,eAAe,EAAElB,iBAHc;AAI/BmB,EAAAA,SAAS,EAAElB,gBAJoB;AAK/BmB,EAAAA,eAAe,EAAElB,mBALc;AAM/BmB,EAAAA,cAAc,EAAElB,kBANe;AAO/BmB,EAAAA,UAAU,EAAElB,iBAPmB;AAQ/BmB,EAAAA,cAAc,EAAElB,kBARe;AAS/BmB,EAAAA,aAAa,EAAElB,oBATgB;AAU/BmB,EAAAA,gBAAgB,EAAEX,4BAVa;AAW/BY,EAAAA,cAAc,EAAEf,gBAXe;AAY/BgB,EAAAA,cAAc,EAAEf,gBAZe;AAa/BgB,EAAAA,UAAU,EAAErB,qBAbmB;AAe/BsB,EAAAA,gBAAgB,EAAEhB;AAfa,CAAD,CAAhC;AAkBA,MAAMiB,KAAK,GAAGnC,WAAW,CACvBoB,QADuB,EAEvBL,mBAAmB,CAACb,eAAe,CAACW,MAAD,EAASC,KAAT,CAAhB,CAFI,CAAzB;AAKA,eAAeqB,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport {\r\n  userSignupReducer,\r\n  userLoginReducer,\r\n  addMeetingReducer,\r\n  getLeavesReducer,\r\n  approveLeaveReducer,\r\n  rejectLeaveReducer,\r\n  getQueriesReducer,\r\n  changeQueryReducer,\r\n  getSalarySlipReducer,getPresentDaysReducer\r\n\r\n} from './reducers/adminReducers'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { employeeAddLeave, employeeAddQuery, employeefetchMeetings, employeeUpdateProfileReducer } from './reducers/employeeReducers';\r\n\r\n// combined reducers\r\nconst reducers = combineReducers({\r\n  userSignup: userSignupReducer,\r\n  userLogin: userLoginReducer,\r\n  adminAddMeeting: addMeetingReducer,\r\n  empLeaves: getLeavesReducer,\r\n  empapproveLeave: approveLeaveReducer,\r\n  emprejectLeave: rejectLeaveReducer,\r\n  empqueries: getQueriesReducer,\r\n  empQueryStatus: changeQueryReducer,\r\n  empSalarySlip: getSalarySlipReducer,\r\n  empProfileUpdate: employeeUpdateProfileReducer,\r\n  employeeLeaves: employeeAddLeave,\r\n  employeeQuerys: employeeAddQuery,\r\n  empPresent: getPresentDaysReducer,\r\n\r\n  employeeMeetings: employeefetchMeetings,\r\n})\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}