{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\LeavesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLeaves } from './../actions/adminActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeavesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const empLeaves = useSelector(store => store.empLeaves);\n  const {\n    error,\n    response,\n    loading\n  } = empLeaves; // // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getLeaves());\n  }, []);\n  useEffect(() => {}, [error, response, loading]);\n\n  const onAddNewMeeting = () => {\n    props.history.push('/addmeetingscreen');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LeaveId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data && response.data.length > 0 && response.data.map(leave => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leaveId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leaveDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leavePurpose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.empname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeavesScreen, \"kRXedCg/AQbVD+U9EkHzi9nM1iI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeavesScreen;\nexport default LeavesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeavesScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/LeavesScreen.js"],"names":["useEffect","useDispatch","useSelector","getLeaves","LeavesScreen","props","dispatch","empLeaves","store","error","response","loading","onAddNewMeeting","history","push","data","length","map","leave","leaveId","leaveDate","leavePurpose","empname"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BJ,SAArC,CAH4B,CAK5B;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM,CAAG,CAAV,EAAY,CAACS,KAAD,EAAQC,QAAR,EAAkBC,OAAlB,CAAZ,CAAT;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BP,IAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,mBAAnB;AACH,GAFD;;AAIA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYQ;AAAA,kBAEQJ,QAAQ,IACRA,QAAQ,CAACK,IADT,IAEAL,QAAQ,CAACK,IAAT,CAAcC,MAAd,GAAuB,CAFvB,IAGAN,QAAQ,CAACK,IAAT,CAAcE,GAAd,CAAmBC,KAAD,IAAW;AACzB,8BACI;AAAA,oCACI;AAAA,wBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAXD;AALR;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CAxDD;;GAAMlB,Y;UACeH,W,EACCC,W;;;KAFhBE,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getLeaves } from './../actions/adminActions';\r\n\r\nconst LeavesScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const empLeaves = useSelector((store) => store.empLeaves)\r\n    const { error, response, loading } = empLeaves\r\n\r\n    // // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(getLeaves())\r\n    }, [])\r\n\r\n    useEffect(() => { }, [error, response, loading])\r\n\r\n    const onAddNewMeeting = () => {\r\n        props.history.push('/addmeetingscreen')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>LeaveId</th>\r\n                        <th>Leave Date</th>\r\n                        <th>Leave Purpose</th>\r\n                        <th>Employee Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    <tbody>\r\n                        {\r\n                            response &&\r\n                            response.data &&\r\n                            response.data.length > 0 &&\r\n                            response.data.map((leave) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{leave.leaveId}</td>\r\n                                        <td>{leave.leaveDate}</td>\r\n                                        <td>{leave.leavePurpose}</td>\r\n                                        <td>{leave.empname}</td>\r\n                                        <td>approve</td>\r\n                                        <td>reject</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeavesScreen\r\n"]},"metadata":{},"sourceType":"module"}