{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\LeavesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../components/Header';\nimport { getMeetings } from './../actions/employeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeavesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const getLeaves = useSelector(store => store.getLeaves);\n  const {\n    error,\n    response,\n    loading\n  } = getLeaves; // // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getMeetings());\n  }, []); // useEffect(() => { }, [error, response, loading])\n  // const onAddNewMeeting = () => {\n  //     props.history.push('/addmeetingscreen')\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LeaveId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeavesScreen, \"Nl1D1y6q8wV5saqgl/oQ3Mq6yhI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LeavesScreen;\nexport default LeavesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeavesScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/LeavesScreen.js"],"names":["useEffect","useDispatch","useSelector","Header","getMeetings","LeavesScreen","props","dispatch","getLeaves","store","error","response","loading"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BJ,SAArC,CAH4B,CAK5B;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT,CAN4B,CAU5B;AAEA;AACA;AACA;;AAEA,sBACI;AAAA,2BAEI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,6BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAtDD;;GAAMC,Y;UACeJ,W,EACCC,W;;;KAFhBG,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Header from '../components/Header';\r\nimport { getMeetings } from './../actions/employeeActions';\r\n\r\nconst LeavesScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const getLeaves = useSelector((store) => store.getLeaves)\r\n    const { error, response, loading } = getLeaves\r\n\r\n    // // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(getMeetings())\r\n    }, [])\r\n\r\n    // useEffect(() => { }, [error, response, loading])\r\n\r\n    // const onAddNewMeeting = () => {\r\n    //     props.history.push('/addmeetingscreen')\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>LeaveId</th>\r\n                        <th>Leave Date</th>\r\n                        <th>Leave Purpose</th>\r\n                        <th>Employee Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* {\r\n                    <tbody>\r\n                        {\r\n                            // response &&\r\n                            // response.data &&\r\n                            // response.data.length > 0 &&\r\n                            // response.data.map((meeting) => {\r\n                            //     return (\r\n                            <tr>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td><link>approve</link></td>\r\n                                <td><link>reject</link></td>\r\n                            </tr>\r\n                            //     )\r\n                            // })\r\n                        }\r\n                    </tbody>\r\n                } */}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeavesScreen\r\n"]},"metadata":{},"sourceType":"module"}