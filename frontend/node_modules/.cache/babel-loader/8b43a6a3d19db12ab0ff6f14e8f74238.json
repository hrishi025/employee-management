{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\LeavesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { approveLeave, getLeaves, rejectLeave } from './../actions/adminActions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeavesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const empLeaves = useSelector(store => store.empLeaves);\n  const {\n    error,\n    response,\n    loading\n  } = empLeaves;\n  const empapproveLeave = useSelector(store => store.empapproveLeave);\n  const {\n    aerror,\n    aresponse,\n    aloading\n  } = empapproveLeave;\n  const emprejectLeave = useSelector(store => store.emprejectLeave);\n  const {\n    rerror,\n    rresponse,\n    rloading\n  } = emprejectLeave; // // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    if (aresponse && aresponse.status == 'success' || rresponse && rresponse.status == 'success') {\n      dispatch(getLeaves());\n    }\n  }, [aerror, aresponse, aloading, rerror, rresponse, rloading]);\n  useEffect(() => {}, [error, response, loading, aerror, aresponse, aloading, rerror, rresponse, rloading]);\n\n  const onApprove = leaveid => {\n    dispatch(approveLeave(\"approved\", leaveid));\n  };\n\n  const onReject = leaveid => {\n    dispatch(rejectLeave(\"rejected\", leaveid));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"LeaveId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave Purpose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data && response.data.length > 0 && response.data.map(leave => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leaveId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leaveDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.leavePurpose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: leave.empname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => onApprove(leave.leaveId),\n                  children: \"approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => onReject(leave.leaveId),\n                  children: \"reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LeavesScreen, \"W3EmZKeF5Uhb6ZoG66liA9YT0eQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = LeavesScreen;\nexport default LeavesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeavesScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/LeavesScreen.js"],"names":["useEffect","useDispatch","useSelector","approveLeave","getLeaves","rejectLeave","Link","LeavesScreen","props","dispatch","empLeaves","store","error","response","loading","empapproveLeave","aerror","aresponse","aloading","emprejectLeave","rerror","rresponse","rloading","status","onApprove","leaveid","onReject","data","length","map","leave","leaveId","leaveDate","leavePurpose","empname"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { approveLeave, getLeaves, rejectLeave } from './../actions/adminActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LeavesScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    const empLeaves = useSelector((store) => store.empLeaves)\r\n    const { error, response, loading } = empLeaves\r\n\r\n    const empapproveLeave = useSelector((store) => store.empapproveLeave)\r\n    const { aerror, aresponse, aloading } = empapproveLeave\r\n\r\n    const emprejectLeave = useSelector((store) => store.emprejectLeave)\r\n    const { rerror, rresponse, rloading } = emprejectLeave\r\n\r\n    // // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        if ((aresponse && aresponse.status == 'success') || (rresponse && rresponse.status == 'success')) {\r\n            dispatch(getLeaves())\r\n        }\r\n    }, [aerror, aresponse, aloading, rerror, rresponse, rloading])\r\n\r\n    useEffect(() => { }, [error, response, loading, aerror, aresponse, aloading, rerror, rresponse, rloading])\r\n\r\n    const onApprove = (leaveid) => {\r\n        dispatch(approveLeave(\"approved\", leaveid))\r\n    }\r\n\r\n    const onReject = (leaveid) => {\r\n        dispatch(rejectLeave(\"rejected\", leaveid))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>LeaveId</th>\r\n                        <th>Leave Date</th>\r\n                        <th>Leave Purpose</th>\r\n                        <th>Employee Name</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    <tbody>\r\n                        {\r\n                            response &&\r\n                            response.data &&\r\n                            response.data.length > 0 &&\r\n                            response.data.map((leave) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{leave.leaveId}</td>\r\n                                        <td>{leave.leaveDate}</td>\r\n                                        <td>{leave.leavePurpose}</td>\r\n                                        <td>{leave.empname}</td>\r\n                                        <td><Link><a onClick={() => onApprove(leave.leaveId)}>approve</a></Link></td>\r\n                                        <td><Link><a onClick={() => onReject(leave.leaveId)}>reject</a></Link></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </table>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LeavesScreen\r\n"]},"metadata":{},"sourceType":"module"}