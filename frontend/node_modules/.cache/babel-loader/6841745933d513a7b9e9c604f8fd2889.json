{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\MeetingsScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QueriesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch(); // const notes = useSelector((store) => store.notes)\n  // const { error, response, loading } = notes\n  // // call this only once (when the page has loaded successfully)\n  // useEffect(() => {\n  //   dispatch(getNotes())\n  // }, [])\n  // useEffect(() => { }, [error, response, loading])\n\n  const onAddNewMeeting = () => {\n    props.history.push('/addmeetingscreen');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAddNewMeeting,\n      className: \"btn btn-primary float-start\",\n      children: \"Add New Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MeetingId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QueriesScreen, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = QueriesScreen;\nexport default QueriesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueriesScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/MeetingsScreen.js"],"names":["useEffect","useDispatch","useSelector","Header","QueriesScreen","props","dispatch","onAddNewMeeting","history","push"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAD6B,CAE7B;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC1BF,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,mBAAnB;AACH,GAFD;;AAIA,sBACI;AAAA,4BAEI;AAAQ,MAAA,OAAO,EAAEF,eAAjB;AAAkC,MAAA,SAAS,EAAC,6BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,6BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CApDD;;GAAMH,a;UACeH,W;;;KADfG,a;AAsDN,eAAeA,aAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Header from '../components/Header'\r\n\r\nconst QueriesScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    // const notes = useSelector((store) => store.notes)\r\n    // const { error, response, loading } = notes\r\n\r\n    // // call this only once (when the page has loaded successfully)\r\n    // useEffect(() => {\r\n    //   dispatch(getNotes())\r\n    // }, [])\r\n\r\n    // useEffect(() => { }, [error, response, loading])\r\n\r\n    const onAddNewMeeting = () => {\r\n        props.history.push('/addmeetingscreen')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">\r\n                Add New Meeting\r\n            </button>\r\n\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>MeetingId</th>\r\n                        <th>Meeting </th>\r\n                        <th>Description</th>\r\n                        <th>Status</th>\r\n                        <th>Employee Name</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* <tbody>\r\n          {response &&\r\n            response.data &&\r\n            response.data.length > 0 &&\r\n            response.data.map((note) => {\r\n              return (\r\n                <tr>\r\n                  <td>{note.id}</td>\r\n                  <td>{note.title}</td>\r\n                  <td>{note.contents}</td>\r\n                  <td></td>\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody> */}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QueriesScreen\r\n"]},"metadata":{},"sourceType":"module"}