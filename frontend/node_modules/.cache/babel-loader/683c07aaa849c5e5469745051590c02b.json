{"ast":null,"code":"export const MEETING_FETCH_REQUEST = 'MEETING_FETCH_REQUEST';\nexport const MEETING_FETCH_SUCCESS = 'MEETING_FETCH_SUCCESS';\nexport const MEETING_FETCH_FAIL = 'MEETING_FETCH_FAIL';\nexport const MEETING_FETCH_RESET = 'MEETING_FETCH_RESET';\nexport const LEAVE_ADD_REQUEST = 'LEAVE_ADD_REQUEST';\nexport const LEAVE_ADD_SUCCESS = 'LEAVE_ADD_SUCCESS';\nexport const LEAVE_ADD_FAIL = 'LEAVE_ADD_FAIL';\nexport const LEAVE_ADD_RESET = 'LEAVE_ADD_RESET';\nexport const QUERY_ADD_SUCCESS = \"QUERY_ADD_SUCCESS\";\nexport const QUERY_ADD_REQUEST = \"QUERY_ADD_REQUEST\";\nexport const QUERY_ADD_FAIL = \"QUERY_ADD_FAIL\";\nexport const QUERY_ADD_RESET = \"QUERY_ADD_RESET\";\nexport const PROFILE_UPDATE_REQUEST = 'PROFILE_UPDATE_REQUEST';\nexport const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS';\nexport const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL';\nexport const PROFILE_UPDATE_RESET = 'PROFILE_UPDATE_RESET';\nexport const PROFILE_FETCH_REQUEST = 'PROFILE_FETCH_REQUEST';\nexport const PROFILE_FETCH_SUCCESS = 'PROFILE_FETCH_SUCCESS';\nexport const PROFILE_FETCH_FAIL = 'PROFILE_FETCH_FAIL';\nexport const PROFILE_FETCH_RESET = 'PROFILE_FETCH_RESET';\nexport const getProfile = () => {\n  return dispatch => {\n    dispatch({\n      type: PROFILE_FETCH_REQUEST\n    });\n    const header = {\n      headers: {\n        'Content-Type': 'application/json',\n        token: sessionStorage['token']\n      }\n    };\n    const url = 'http://localhost:4000/present/getAll';\n    axios.get(url, header).then(response => {\n      dispatch({\n        type: PROFILE_FETCH_SUCCESS,\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: PROFILE_FETCH_FAIL,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:/test/frontend/src/constants/employeeConstants.js"],"names":["MEETING_FETCH_REQUEST","MEETING_FETCH_SUCCESS","MEETING_FETCH_FAIL","MEETING_FETCH_RESET","LEAVE_ADD_REQUEST","LEAVE_ADD_SUCCESS","LEAVE_ADD_FAIL","LEAVE_ADD_RESET","QUERY_ADD_SUCCESS","QUERY_ADD_REQUEST","QUERY_ADD_FAIL","QUERY_ADD_RESET","PROFILE_UPDATE_REQUEST","PROFILE_UPDATE_SUCCESS","PROFILE_UPDATE_FAIL","PROFILE_UPDATE_RESET","PROFILE_FETCH_REQUEST","PROFILE_FETCH_SUCCESS","PROFILE_FETCH_FAIL","PROFILE_FETCH_RESET","getProfile","dispatch","type","header","headers","token","sessionStorage","url","axios","get","then","response","payload","data","catch","error"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAIA,UAAMO,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,KAAK,EAAEC,cAAc,CAAC,OAAD;AAFhB;AADE,KAAf;AAOA,UAAMC,GAAG,GAAG,sCAAZ;AAEAC,IAAAA,KAAK,CACAC,GADL,CACSF,GADT,EACcJ,MADd,EAEKO,IAFL,CAEWC,QAAD,IAAc;AAChBV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEL,qBADD;AAELe,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR;AAIH,KAPL,EAQKC,KARL,CAQYC,KAAD,IAAW;AACdd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,kBADD;AAELc,QAAAA,OAAO,EAAEG;AAFJ,OAAD,CAAR;AAIH,KAbL;AAcH,GA5BD;AA6BH,CA9BM","sourcesContent":["export const MEETING_FETCH_REQUEST = 'MEETING_FETCH_REQUEST'\r\nexport const MEETING_FETCH_SUCCESS = 'MEETING_FETCH_SUCCESS'\r\nexport const MEETING_FETCH_FAIL = 'MEETING_FETCH_FAIL'\r\nexport const MEETING_FETCH_RESET = 'MEETING_FETCH_RESET'\r\n\r\nexport const LEAVE_ADD_REQUEST = 'LEAVE_ADD_REQUEST'\r\nexport const LEAVE_ADD_SUCCESS = 'LEAVE_ADD_SUCCESS'\r\nexport const LEAVE_ADD_FAIL = 'LEAVE_ADD_FAIL'\r\nexport const LEAVE_ADD_RESET = 'LEAVE_ADD_RESET'\r\n\r\nexport const QUERY_ADD_SUCCESS = \"QUERY_ADD_SUCCESS\"\r\nexport const QUERY_ADD_REQUEST = \"QUERY_ADD_REQUEST\"\r\nexport const QUERY_ADD_FAIL = \"QUERY_ADD_FAIL\"\r\nexport const QUERY_ADD_RESET = \"QUERY_ADD_RESET\"\r\n\r\nexport const PROFILE_UPDATE_REQUEST = 'PROFILE_UPDATE_REQUEST'\r\nexport const PROFILE_UPDATE_SUCCESS = 'PROFILE_UPDATE_SUCCESS'\r\nexport const PROFILE_UPDATE_FAIL = 'PROFILE_UPDATE_FAIL'\r\nexport const PROFILE_UPDATE_RESET = 'PROFILE_UPDATE_RESET'\r\n\r\nexport const PROFILE_FETCH_REQUEST = 'PROFILE_FETCH_REQUEST'\r\nexport const PROFILE_FETCH_SUCCESS = 'PROFILE_FETCH_SUCCESS'\r\nexport const PROFILE_FETCH_FAIL = 'PROFILE_FETCH_FAIL'\r\nexport const PROFILE_FETCH_RESET = 'PROFILE_FETCH_RESET'\r\nexport const getProfile = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PROFILE_FETCH_REQUEST,\r\n        })\r\n\r\n        const header = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: sessionStorage['token'],\r\n            },\r\n        }\r\n\r\n        const url = 'http://localhost:4000/present/getAll'\r\n\r\n        axios\r\n            .get(url, header)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: PROFILE_FETCH_SUCCESS,\r\n                    payload: response.data,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: PROFILE_FETCH_FAIL,\r\n                    payload: error,\r\n                })\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}