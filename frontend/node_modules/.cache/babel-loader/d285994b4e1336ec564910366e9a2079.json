{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../actions/employeeActions';\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\nimport { getProfile } from './../actions/employeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfileScreen = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const empProfile = useSelector(store => store.empProfile); // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getProfile());\n  }, []);\n  useEffect(() => {}, [empProfile.error, empProfile.response, empProfile.loading]);\n  const empProfileUpdate = useSelector(store => store.empProfileUpdate);\n  const {\n    error,\n    response,\n    loading\n  } = empProfileUpdate;\n  useEffect(() => {\n    console.log('inside useeffect');\n    console.log(response);\n\n    if (response && response.status == 'success') {\n      dispatch({\n        type: PROFILE_UPDATE_RESET\n      });\n      alert('profile updated successfuly');\n    } else if (error) {\n      alert('error');\n    }\n  }, [loading, response, error]);\n\n  const onUpdate = () => {\n    dispatch(updateProfile(email, phone));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [empProfile.response && empProfile.response.data && empProfile.response.data.length > 0 && empProfile.response.data.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user.empName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: true,\n          placeholder: \"{presponse.data()}\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"Phone\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          placeholder: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileScreen, \"Ds+1DjcxB9GyJwNqpHatt9PPHmc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen; // import { useEffect } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Header from './../components/Header';\n// import { getPresentDays } from './../actions/employeeActions';\n// const EditProfileScreen = (props) => {\n//     const dispatch = useDispatch()\n//     const empPresent = useSelector((store) => store.empPresent)\n//     const { error, response, loading } = empPresent\n//     const userLogin = useSelector((store) => store.userLogin)\n//     // // call this only once (when the page has loaded successfully)\n//     useEffect(() => {\n//         dispatch(getPresentDays())\n//     }, [])\n//     useEffect(() => { }, [error, response, loading])\n//     const onAddNewMeeting = () => {\n//         props.history.push('/addmeetingscreen')\n//     }\n//     return (\n//         <div>\n//             <Header title=\"Edit Profile\" />\n//             <hr />\n//             {\n//                 userLogin.response && userLogin.response.data.role == 'admin' &&\n//                 <div>\n//                     <br />\n//                     <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">Add New Meeting</button>\n//                 </div>\n//             }\n//             <table className=\"table table-striped\">\n//                 <thead>\n//                     <tr>\n//                         <th>MeetingId</th>\n//                         <th>Meeting Info</th>\n//                         <th>Meeting Date Time</th>\n//                         <th>Meeting Status</th>\n//                         <th></th>\n//                         <th></th>\n//                     </tr>\n//                 </thead>\n//                 {\n//                     <tbody>\n//                         {\n//                             response &&\n//                             response.data &&\n//                             response.data.length > 0 &&\n//                             response.data.map((meeting) => {\n//                                 return (\n//                                     <tr>\n//                                         <td>{meeting.empId}</td>\n//                                         <td>{meeting.empName}</td>\n//                                     </tr>\n//                                 )\n//                             })\n//                         }\n//                     </tbody>\n//                 }\n//             </table>\n//         </div>\n//     )\n// }\n// export default EditProfileScreen\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/EditProfileScreen.js"],"names":["useState","useEffect","Header","useDispatch","useSelector","updateProfile","PROFILE_UPDATE_RESET","getProfile","EditProfileScreen","props","email","setEmail","phone","setPhone","dispatch","empProfile","store","error","response","loading","empProfileUpdate","console","log","status","type","alert","onUpdate","data","length","map","user","empName","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from '../components/Header'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile } from '../actions/employeeActions'\r\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\r\nimport { getProfile } from './../actions/employeeActions';\r\n\r\nconst EditProfileScreen = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const empProfile = useSelector((store) => store.empProfile)\r\n\r\n    // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(getProfile())\r\n    }, [])\r\n\r\n    useEffect(() => { }, [empProfile.error, empProfile.response, empProfile.loading])\r\n\r\n\r\n    const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\r\n    const { error, response, loading } = empProfileUpdate\r\n\r\n    useEffect(() => {\r\n        console.log('inside useeffect')\r\n        console.log(response)\r\n        if (response && response.status == 'success') {\r\n            dispatch({\r\n                type: PROFILE_UPDATE_RESET,\r\n            })\r\n            alert('profile updated successfuly')\r\n        } else if (error) {\r\n            alert('error')\r\n        }\r\n    }, [loading, response, error])\r\n\r\n    const onUpdate = () => {\r\n        dispatch(updateProfile(email, phone))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                empProfile.response &&\r\n                empProfile.response.data &&\r\n                empProfile.response.data.length > 0 &&\r\n                empProfile.response.data.map((user) => {\r\n                    return (\r\n                        <div>{user.empName}</div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n            <div className=\"form\">\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input\r\n                        disabled\r\n                        placeholder=\"{presponse.data()}\"\r\n                        className=\"form-control\"\r\n                    ></input>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Email</label>\r\n                    <input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"email\"\r\n                        className=\"form-control\"></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Phone</label>\r\n                    <input\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                        placeholder=\"Phone\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Upload Photo</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        placeholder=\"\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <button onClick={onUpdate} className=\"btn btn-primary\">\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditProfileScreen\r\n\r\n\r\n// import { useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import Header from './../components/Header';\r\n// import { getPresentDays } from './../actions/employeeActions';\r\n\r\n// const EditProfileScreen = (props) => {\r\n//     const dispatch = useDispatch()\r\n//     const empPresent = useSelector((store) => store.empPresent)\r\n//     const { error, response, loading } = empPresent\r\n\r\n//     const userLogin = useSelector((store) => store.userLogin)\r\n\r\n//     // // call this only once (when the page has loaded successfully)\r\n//     useEffect(() => {\r\n//         dispatch(getPresentDays())\r\n//     }, [])\r\n\r\n//     useEffect(() => { }, [error, response, loading])\r\n\r\n//     const onAddNewMeeting = () => {\r\n//         props.history.push('/addmeetingscreen')\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <Header title=\"Edit Profile\" />\r\n//             <hr />\r\n//             {\r\n//                 userLogin.response && userLogin.response.data.role == 'admin' &&\r\n//                 <div>\r\n//                     <br />\r\n//                     <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">Add New Meeting</button>\r\n//                 </div>\r\n//             }\r\n\r\n//             <table className=\"table table-striped\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>MeetingId</th>\r\n//                         <th>Meeting Info</th>\r\n//                         <th>Meeting Date Time</th>\r\n//                         <th>Meeting Status</th>\r\n//                         <th></th>\r\n//                         <th></th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 {\r\n//                     <tbody>\r\n//                         {\r\n//                             response &&\r\n//                             response.data &&\r\n//                             response.data.length > 0 &&\r\n//                             response.data.map((meeting) => {\r\n//                                 return (\r\n//                                     <tr>\r\n//                                         <td>{meeting.empId}</td>\r\n//                                         <td>{meeting.empName}</td>\r\n\r\n//                                     </tr>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n//                     </tbody>\r\n//                 }\r\n//             </table>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default EditProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}