{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../actions/employeeActions';\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\nimport { fetchProfile } from './../actions/employeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfileScreen = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const empProfileUpdate = useSelector(store => store.empProfileUpdate);\n  const {\n    error,\n    response,\n    loading\n  } = empProfileUpdate;\n  const empProfile = useSelector(store => store.empProfile);\n  const {\n    perror,\n    presponse,\n    ploading\n  } = empProfile; // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(fetchProfile());\n  }, []);\n  useEffect(() => {}, [perror, presponse, ploading]); // useEffect(() => {\n  //     console.log('inside useeffect')\n  //     console.log(response)\n  //     if (response && response.status == 'success') {\n  //         dispatch({\n  //             type: PROFILE_UPDATE_RESET,\n  //         })\n  //         alert('profile updated successfuly')\n  //     } else if (error) {\n  //         alert('error')\n  //     }\n  // }, [loading, response, error])\n\n  const onUpdate = () => {\n    dispatch(updateProfile(email, phone));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          disabled: true,\n          placeholder: presponse.data.value,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"Phone\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          placeholder: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileScreen, \"irsSG89CW+T3c411yHrYfHwWbaw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/EditProfileScreen.js"],"names":["useState","useEffect","Header","useDispatch","useSelector","updateProfile","PROFILE_UPDATE_RESET","fetchProfile","EditProfileScreen","props","email","setEmail","phone","setPhone","dispatch","empProfileUpdate","store","error","response","loading","empProfile","perror","presponse","ploading","onUpdate","data","value","e","target"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from '../components/Header'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile } from '../actions/employeeActions'\r\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\r\nimport { fetchProfile } from './../actions/employeeActions';\r\n\r\nconst EditProfileScreen = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\r\n    const { error, response, loading } = empProfileUpdate\r\n\r\n    const empProfile = useSelector((store) => store.empProfile)\r\n    const { perror, presponse, ploading } = empProfile\r\n\r\n    // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(fetchProfile())\r\n\r\n    }, [])\r\n\r\n    useEffect(() => { }, [perror, presponse, ploading])\r\n\r\n    // useEffect(() => {\r\n    //     console.log('inside useeffect')\r\n    //     console.log(response)\r\n    //     if (response && response.status == 'success') {\r\n    //         dispatch({\r\n    //             type: PROFILE_UPDATE_RESET,\r\n    //         })\r\n    //         alert('profile updated successfuly')\r\n    //     } else if (error) {\r\n    //         alert('error')\r\n    //     }\r\n    // }, [loading, response, error])\r\n\r\n    const onUpdate = () => {\r\n        dispatch(updateProfile(email, phone))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Edit Profile\" />\r\n            <hr />\r\n            <div className=\"form\">\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <label\r\n                        disabled\r\n                        placeholder={presponse.data.value}\r\n                        className=\"form-control\"\r\n                    ></label>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Email</label>\r\n                    <input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"email\"\r\n                        className=\"form-control\"></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Phone</label>\r\n                    <input\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                        placeholder=\"Phone\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Upload Photo</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        placeholder=\"\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <button onClick={onUpdate} className=\"btn btn-primary\">\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}