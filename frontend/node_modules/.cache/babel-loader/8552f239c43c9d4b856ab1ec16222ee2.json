{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\EditProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateProfile } from '../actions/employeeActions';\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\nimport { fetchProfile, getPresentDays } from './../actions/employeeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfileScreen = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch(); // const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\n  // const { error, response, loading } = empProfileUpdate\n\n  const empPresent = useSelector(store => store.empPresent);\n  const {\n    perror,\n    presponse,\n    ploading\n  } = empPresent; // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getPresentDays());\n  }, []);\n  useEffect(() => {}, [perror, presponse, ploading]); // useEffect(() => {\n  //     console.log('inside useeffect')\n  //     console.log(response)\n  //     if (response && response.status == 'success') {\n  //         dispatch({\n  //             type: PROFILE_UPDATE_RESET,\n  //         })\n  //         alert('profile updated successfuly')\n  //     } else if (error) {\n  //         alert('error')\n  //     }\n  // }, [loading, response, error])\n\n  const onUpdate = () => {\n    dispatch(updateProfile(email, phone));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MeetingId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Date Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meeting Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: presponse && presponse.data && presponse.data.length > 0 && response.data.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.empId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.empName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: true,\n          placeholder: \"{presponse.data()}\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"Phone\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          placeholder: \"\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditProfileScreen, \"uebwd5ow8QnBToH5BT1N0eiX8MU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditProfileScreen;\nexport default EditProfileScreen; // import { useEffect } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import Header from './../components/Header';\n// import { getPresentDays } from './../actions/employeeActions';\n// const EditProfileScreen = (props) => {\n//     const dispatch = useDispatch()\n//     const empPresent = useSelector((store) => store.empPresent)\n//     const { error, response, loading } = empPresent\n//     const userLogin = useSelector((store) => store.userLogin)\n//     // // call this only once (when the page has loaded successfully)\n//     useEffect(() => {\n//         dispatch(getPresentDays())\n//     }, [])\n//     useEffect(() => { }, [error, response, loading])\n//     const onAddNewMeeting = () => {\n//         props.history.push('/addmeetingscreen')\n//     }\n//     return (\n//         <div>\n//             <Header title=\"Edit Profile\" />\n//             <hr />\n//             {\n//                 userLogin.response && userLogin.response.data.role == 'admin' &&\n//                 <div>\n//                     <br />\n//                     <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">Add New Meeting</button>\n//                 </div>\n//             }\n//             <table className=\"table table-striped\">\n//                 <thead>\n//                     <tr>\n//                         <th>MeetingId</th>\n//                         <th>Meeting Info</th>\n//                         <th>Meeting Date Time</th>\n//                         <th>Meeting Status</th>\n//                         <th></th>\n//                         <th></th>\n//                     </tr>\n//                 </thead>\n//                 {\n//                     <tbody>\n//                         {\n//                             response &&\n//                             response.data &&\n//                             response.data.length > 0 &&\n//                             response.data.map((meeting) => {\n//                                 return (\n//                                     <tr>\n//                                         <td>{meeting.empId}</td>\n//                                         <td>{meeting.empName}</td>\n//                                     </tr>\n//                                 )\n//                             })\n//                         }\n//                     </tbody>\n//                 }\n//             </table>\n//         </div>\n//     )\n// }\n// export default EditProfileScreen\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/EditProfileScreen.js"],"names":["useState","useEffect","Header","useDispatch","useSelector","updateProfile","PROFILE_UPDATE_RESET","fetchProfile","getPresentDays","EditProfileScreen","props","email","setEmail","phone","setPhone","dispatch","empPresent","store","perror","presponse","ploading","onUpdate","data","length","response","map","user","empId","empName","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from '../components/Header'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile } from '../actions/employeeActions'\r\nimport { PROFILE_UPDATE_RESET } from './../constants/employeeConstants';\r\nimport { fetchProfile, getPresentDays } from './../actions/employeeActions';\r\n\r\nconst EditProfileScreen = (props) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    // const empProfileUpdate = useSelector((store) => store.empProfileUpdate)\r\n    // const { error, response, loading } = empProfileUpdate\r\n\r\n    const empPresent = useSelector((store) => store.empPresent)\r\n    const { perror, presponse, ploading } = empPresent\r\n\r\n    // // call this only once (when the page has loaded successfully)\r\n    useEffect(() => {\r\n        dispatch(getPresentDays())\r\n    }, [])\r\n\r\n    useEffect(() => { }, [perror, presponse, ploading])\r\n\r\n    // useEffect(() => {\r\n    //     console.log('inside useeffect')\r\n    //     console.log(response)\r\n    //     if (response && response.status == 'success') {\r\n    //         dispatch({\r\n    //             type: PROFILE_UPDATE_RESET,\r\n    //         })\r\n    //         alert('profile updated successfuly')\r\n    //     } else if (error) {\r\n    //         alert('error')\r\n    //     }\r\n    // }, [loading, response, error])\r\n\r\n    const onUpdate = () => {\r\n        dispatch(updateProfile(email, phone))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Edit Profile\" />\r\n            <hr />\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>MeetingId</th>\r\n                        <th>Meeting Info</th>\r\n                        <th>Meeting Date Time</th>\r\n                        <th>Meeting Status</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    <tbody>\r\n                        {\r\n                            presponse &&\r\n                            presponse.data &&\r\n                            presponse.data.length > 0 &&\r\n                            response.data.map((user) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{user.empId}</td>\r\n                                        <td>{user.empName}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                }\r\n            </table>\r\n\r\n\r\n            <div className=\"form\">\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Name</label>\r\n                    <input\r\n                        disabled\r\n                        placeholder=\"{presponse.data()}\"\r\n                        className=\"form-control\"\r\n                    ></input>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Email</label>\r\n                    <input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"email\"\r\n                        className=\"form-control\"></input>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Phone</label>\r\n                    <input\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                        placeholder=\"Phone\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Upload Photo</label>\r\n                    <input\r\n                        type=\"file\"\r\n                        placeholder=\"\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <button onClick={onUpdate} className=\"btn btn-primary\">\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditProfileScreen\r\n\r\n\r\n// import { useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import Header from './../components/Header';\r\n// import { getPresentDays } from './../actions/employeeActions';\r\n\r\n// const EditProfileScreen = (props) => {\r\n//     const dispatch = useDispatch()\r\n//     const empPresent = useSelector((store) => store.empPresent)\r\n//     const { error, response, loading } = empPresent\r\n\r\n//     const userLogin = useSelector((store) => store.userLogin)\r\n\r\n//     // // call this only once (when the page has loaded successfully)\r\n//     useEffect(() => {\r\n//         dispatch(getPresentDays())\r\n//     }, [])\r\n\r\n//     useEffect(() => { }, [error, response, loading])\r\n\r\n//     const onAddNewMeeting = () => {\r\n//         props.history.push('/addmeetingscreen')\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <Header title=\"Edit Profile\" />\r\n//             <hr />\r\n//             {\r\n//                 userLogin.response && userLogin.response.data.role == 'admin' &&\r\n//                 <div>\r\n//                     <br />\r\n//                     <button onClick={onAddNewMeeting} className=\"btn btn-primary float-start\">Add New Meeting</button>\r\n//                 </div>\r\n//             }\r\n\r\n//             <table className=\"table table-striped\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>MeetingId</th>\r\n//                         <th>Meeting Info</th>\r\n//                         <th>Meeting Date Time</th>\r\n//                         <th>Meeting Status</th>\r\n//                         <th></th>\r\n//                         <th></th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 {\r\n//                     <tbody>\r\n//                         {\r\n//                             response &&\r\n//                             response.data &&\r\n//                             response.data.length > 0 &&\r\n//                             response.data.map((meeting) => {\r\n//                                 return (\r\n//                                     <tr>\r\n//                                         <td>{meeting.empId}</td>\r\n//                                         <td>{meeting.empName}</td>\r\n\r\n//                                     </tr>\r\n//                                 )\r\n//                             })\r\n//                         }\r\n//                     </tbody>\r\n//                 }\r\n//             </table>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default EditProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}