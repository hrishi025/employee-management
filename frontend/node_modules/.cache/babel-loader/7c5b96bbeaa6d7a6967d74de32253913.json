{"ast":null,"code":"var _jsxFileName = \"F:\\\\test\\\\frontend\\\\src\\\\screens\\\\QueriesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQueries } from '../actions/adminActions';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QueriesScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const empqueries = useSelector(store => store.empqueries);\n  const {\n    loading,\n    response,\n    error\n  } = empqueries;\n  const userLogin = useSelector(store => store.userLogin); // // call this only once (when the page has loaded successfully)\n\n  useEffect(() => {\n    dispatch(getQueries());\n  }, []);\n  useEffect(() => {}, [error, response, loading]);\n\n  const onAddQuery = () => {\n    props.history.push('/addquery');\n  };\n\n  const onStatusChange = () => {\n    dispatch(changeQueryStatus());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Queries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: response && response.data && response.data.length > 0 && response.data.map(query => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: query.qId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: query.queryTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: query.queryDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: query.queryStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: query.empName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), userLogin.response && userLogin.response.data.role == 'admin' && query.queryStatus == 'not solved' && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onStatusChange(),\n                children: \"Change status to Solved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), userLogin.response && userLogin.response.data.role == 'employee' && /*#__PURE__*/_jsxDEV(\"div\", {\n      div: true,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddQuery,\n        className: \"btn btn-success\",\n        children: \"Add Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QueriesScreen, \"+ylCp2F7UFA2p1KXejp6FKXKFuM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = QueriesScreen;\nexport default QueriesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueriesScreen\");","map":{"version":3,"sources":["F:/test/frontend/src/screens/QueriesScreen.js"],"names":["useEffect","useDispatch","useSelector","getQueries","Header","QueriesScreen","props","dispatch","empqueries","store","loading","response","error","userLogin","onAddQuery","history","push","onStatusChange","changeQueryStatus","data","length","map","query","qId","queryTitle","queryDesc","queryStatus","empName","role"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BJ,UAArC;AAEA,QAAMK,SAAS,GAAGX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACI,SAAlB,CAA7B,CAP+B,CAS/B;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM,CAAG,CAAV,EAAY,CAACY,KAAD,EAAQD,QAAR,EAAkBD,OAAlB,CAAZ,CAAT;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACvBR,IAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BV,IAAAA,QAAQ,CAACW,iBAAiB,EAAlB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaI;AAAA,kBAEIP,QAAQ,IACRA,QAAQ,CAACQ,IADT,IAEAR,QAAQ,CAACQ,IAAT,CAAcC,MAAd,GAAuB,CAFvB,IAGAT,QAAQ,CAACQ,IAAT,CAAcE,GAAd,CAAmBC,KAAD,IAAW;AAC3B,8BACE;AAAA,oCACE;AAAA,wBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCAAI;AAAA,0BAASH,KAAK,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,oBALF,EAMId,SAAS,CAACF,QAAV,IAAsBE,SAAS,CAACF,QAAV,CAAmBQ,IAAnB,CAAwBS,IAAxB,IAAgC,OAAtD,IAAiEN,KAAK,CAACI,WAAN,IAAqB,YAAtF,iBACA;AAAA,qCAAI;AAAQ,gBAAA,OAAO,EAAET,cAAc,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAbD;AALJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EA0CIJ,SAAS,CAACF,QAAV,IAAsBE,SAAS,CAACF,QAAV,CAAmBQ,IAAnB,CAAwBS,IAAxB,IAAgC,UAAtD,iBACA;AAAK,MAAA,GAAG,MAAR;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEd,UAAjB;AAA6B,QAAA,SAAS,EAAC,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CA1ED;;GAAMT,a;UAEaJ,W,EAEEC,W,EAGDA,W;;;KAPdG,a;AA4EN,eAAeA,aAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getQueries } from '../actions/adminActions'\r\nimport Header from '../components/Header'\r\n\r\nconst QueriesScreen = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const empqueries = useSelector((store) => store.empqueries)\r\n  const { loading, response, error } = empqueries\r\n\r\n  const userLogin = useSelector((store) => store.userLogin)\r\n\r\n  // // call this only once (when the page has loaded successfully)\r\n  useEffect(() => {\r\n    dispatch(getQueries())\r\n  }, [])\r\n\r\n  useEffect(() => { }, [error, response, loading])\r\n\r\n  const onAddQuery = () => {\r\n    props.history.push('/addquery')\r\n  }\r\n\r\n  const onStatusChange = () => {\r\n    dispatch(changeQueryStatus())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Queries\" />\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th>Employee Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n\r\n        {\r\n          <tbody>\r\n            {\r\n              response &&\r\n              response.data &&\r\n              response.data.length > 0 &&\r\n              response.data.map((query) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{query.qId}</td>\r\n                    <td>{query.queryTitle}</td>\r\n                    <td>{query.queryDesc}</td>\r\n                    <td><strong>{query.queryStatus}</strong></td>\r\n                    <td>{query.empName}</td>\r\n                    { userLogin.response && userLogin.response.data.role == 'admin' && query.queryStatus == 'not solved' &&\r\n                      <td><button onClick={onStatusChange()}>Change status to Solved</button></td>\r\n                    }\r\n                  </tr>\r\n                )\r\n              })\r\n            }\r\n          </tbody>\r\n        }\r\n\r\n      </table>\r\n\r\n      {/* Show Add Query button only for employee login */}\r\n      {\r\n        userLogin.response && userLogin.response.data.role == 'employee' &&\r\n        <div div >\r\n          <button onClick={onAddQuery} className=\"btn btn-success\">Add Query</button>\r\n        </div>\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default QueriesScreen\r\n"]},"metadata":{},"sourceType":"module"}